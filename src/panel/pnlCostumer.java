/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panel;

import java.awt.Color;
import java.awt.Font;
import javax.swing.JTextField;
import com.placeholder.PlaceHolder;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import method.Date;
import swing.koneksi;

/**
 *
 * @author Aditya Pratama
 */
public class pnlCostumer extends javax.swing.JPanel {
PlaceHolder holder; 
String s;
byte[] photo;
/**
     * Creates new form pnlCostumer
     */
    public pnlCostumer() {
        initComponents();
        id_auto();
        tampilkan();
         holder = new PlaceHolder(txtNama, "Enter Name");
         holder = new PlaceHolder(txtAlamat, "Enter Address");
         holder = new PlaceHolder(txtTelp, "Enter Telephone Number");
         holder = new PlaceHolder(txtTempat, "Place Of Birth");
         holder = new PlaceHolder(txtEmail, "Enter Email");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtTelp = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtTempat = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAlamat = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSave = new javax.swing.JLabel();
        txtEdit = new javax.swing.JLabel();
        txtDelete = new javax.swing.JLabel();
        txtDate = new com.toedter.calendar.JDateChooser();
        txtDelete1 = new javax.swing.JLabel();

        txtID.setEditable(false);
        txtID.setBackground(java.awt.SystemColor.controlHighlight);
        txtID.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtTelp.setBackground(java.awt.SystemColor.controlHighlight);
        txtTelp.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtTelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelpActionPerformed(evt);
            }
        });

        txtNama.setBackground(java.awt.SystemColor.controlHighlight);
        txtNama.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });

        txtEmail.setBackground(java.awt.SystemColor.controlHighlight);
        txtEmail.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtTempat.setBackground(java.awt.SystemColor.controlHighlight);
        txtTempat.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 11)); // NOI18N
        txtTempat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTempatActionPerformed(evt);
            }
        });

        jLabel1.setText("/");

        txtJenis.setBackground(new java.awt.Color(204, 204, 204));
        txtJenis.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtJenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gender", "Male", "Female" }));
        txtJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJenisActionPerformed(evt);
            }
        });

        txtAlamat.setBackground(java.awt.SystemColor.controlHighlight);
        txtAlamat.setColumns(20);
        txtAlamat.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtAlamat.setRows(5);
        jScrollPane1.setViewportView(txtAlamat);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        tblCostumer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblCostumer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCostumerMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblCostumerMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblCostumer);

        txtSave.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/save.png"))); // NOI18N
        txtSave.setText("Save");
        txtSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtSaveMousePressed(evt);
            }
        });

        txtEdit.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/edit (1).png"))); // NOI18N
        txtEdit.setText("Edit");
        txtEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtEditMousePressed(evt);
            }
        });

        txtDelete.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/file.png"))); // NOI18N
        txtDelete.setText("Delete");
        txtDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDeleteMousePressed(evt);
            }
        });

        txtDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtDatePropertyChange(evt);
            }
        });

        txtDelete1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtDelete1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/refresh.png"))); // NOI18N
        txtDelete1.setText("Refresh");
        txtDelete1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtDelete1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDelete1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTelp)
                    .addComponent(txtNama)
                    .addComponent(txtID)
                    .addComponent(txtJenis, 0, 311, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtEmail)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtTempat, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtSave)
                        .addGap(18, 18, 18)
                        .addComponent(txtEdit)
                        .addGap(18, 18, 18)
                        .addComponent(txtDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtDelete1)))
                .addGap(38, 38, 38))
            .addComponent(jSeparator2)
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtTempat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel1))
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSave)
                            .addComponent(txtEdit)
                            .addComponent(txtDelete)
                            .addComponent(txtDelete1)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTelp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
       
    }//GEN-LAST:event_txtIDActionPerformed

    private void txtTelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelpActionPerformed

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtTempatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTempatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTempatActionPerformed

    private void txtJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJenisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJenisActionPerformed

    private void txtSaveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSaveMousePressed
        // TODO add your handling code here:
        simpan();
        reset();
        tampilkan();
    }//GEN-LAST:event_txtSaveMousePressed

    private void tblCostumerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCostumerMousePressed
        // TODO add your handling code here
        Date date = new Date();
        if(evt.getClickCount()==1){
            txtDate.setDate(date.tanggal(tblCostumer, 6));
        }
    }//GEN-LAST:event_tblCostumerMousePressed

    private void tblCostumerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCostumerMouseClicked
        // TODO add your handling code here:
        
        try{
            int row = tblCostumer.getSelectedRow();
            txtID.setText(tblCostumer.getValueAt(row, 0).toString());
            txtNama.setText(tblCostumer.getValueAt(row, 1).toString());
            txtJenis.setSelectedItem(tblCostumer.getValueAt(row, 2).toString());
            txtTelp.setText(tblCostumer.getValueAt(row, 3).toString());
            txtEmail.setText(tblCostumer.getValueAt(row, 4).toString());
            txtTempat.setText(tblCostumer.getValueAt(row, 5).toString());
           txtAlamat.setText(tblCostumer.getValueAt(row, 7).toString());
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_tblCostumerMouseClicked

    private void txtDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtDatePropertyChange
        // TODO add your handling code here:
        try{
        if (txtDate.getDate()!= null){
            SimpleDateFormat ft = new SimpleDateFormat("dd-MM-yyyy");
        String costumer = String.valueOf(ft.format(txtDate.getDate()));
        }
        }catch(Exception e){}
                  
    }//GEN-LAST:event_txtDatePropertyChange

    private void txtEditMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEditMousePressed
        // TODO add your handling code here:
        edit();
        reset();
        tampilkan();
    }//GEN-LAST:event_txtEditMousePressed

    private void txtDeleteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDeleteMousePressed
        // TODO add your handling code here:\
        hapus();
        tampilkan();
    }//GEN-LAST:event_txtDeleteMousePressed

    private void txtDelete1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDelete1MousePressed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_txtDelete1MousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    public static final javax.swing.JTable tblCostumer = new javax.swing.JTable();
    public javax.swing.JTextArea txtAlamat;
    public com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JLabel txtDelete;
    private javax.swing.JLabel txtDelete1;
    private javax.swing.JLabel txtEdit;
    public javax.swing.JTextField txtEmail;
    public static final javax.swing.JTextField txtID = new javax.swing.JTextField();
    public static final javax.swing.JComboBox<String> txtJenis = new javax.swing.JComboBox<>();
    public javax.swing.JTextField txtNama;
    private javax.swing.JLabel txtSave;
    public javax.swing.JTextField txtTelp;
    public javax.swing.JTextField txtTempat;
    // End of variables declaration//GEN-END:variables

    // inisialiasasi
    Statement stat;
     Connection con;
     PreparedStatement ps;
     
     
     
      private void koneksi(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/goplane?","root","");
            stat = con.createStatement();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
     
     // Menyimpan Data
    private void simpan (){
       
      koneksi();
                try{
                    
                 
                      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                                String date = sdf.format(txtDate.getDate());
                                
                    int pil1=0;
                    
                    String kelamin = "";
                    pil1 = txtJenis.getSelectedIndex();
                    
                  
                    if(pil1==0){kelamin = "";}
                    if(pil1==1){kelamin = "Male";}
                    if(pil1==2){kelamin = "Female";}
                    
                  ps = con.prepareStatement("insert into costumer values(? ,? ,? ,?, ?, ?, ? ,?)");
                  ps.setString(1, txtID.getText());
                  ps.setString(2, txtNama.getText());
                  ps.setString(3, kelamin);
                  ps.setString(4, txtTelp.getText());
                  ps.setString(5, txtEmail.getText());
                  ps.setString(6, txtTempat.getText()); 
                  ps.setString(7, date);
                  ps.setString(8, txtAlamat.getText());
                  ps.execute();
                  
//            stat.executeUpdate("INSERT INTO costumer values("
//                    + "'" + txtID.getText() + "',"
//                    + "'" + txtNama.getText() + "',"
//                    + "'" + pil1 + "',"
//                    + "'" + txtTelp.getText() + "',"
//                    + "'" + txtPhoto.getIcon()+ "',"
//                    + "'" + txtEmail.getText()+ "',"
//                    + "'" + txtTempat.getText()+ "',"
//                    + "'" + date + "',"
//                    +  "'" + txtAlamat.getText() +"')");
//         stat.close();
         reset();
         id_auto();
         txtNama.requestFocus();
         JOptionPane.showMessageDialog(null, "Saved Success!");
         
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Failed to Save!");
        }
       
    }
    
    // Mengedit Data
    private void edit(){
    try{
          koneksi();             
           String sql = "update costumer set id=?, nama=?, gender=?, telp=?, email=?, tempat=?, tanggal=?, alamat=? Where id = '"+txtID.getText()+"'";
           PreparedStatement st = con.prepareStatement(sql);{
         try{ 

             SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                                String date = sdf.format(txtDate.getDate());
             st.setString(1, txtID.getText());
             st.setString(2, txtNama.getText());
             st.setString(3, txtJenis.getSelectedItem().toString());
             st.setString(4, txtTelp.getText());
             st.setString(5, txtEmail.getText());
             st.setString(6, txtTempat.getText());
             st.setString(7, date);
             st.setString(8, txtAlamat.getText());
             st.executeUpdate();
             JOptionPane.showMessageDialog(null, "Updated Success!");
         }catch(SQLException e){
             JOptionPane.showMessageDialog(null, "Failed to updated");
         }   
        }
        } catch (SQLException ex) {
        Logger.getLogger(pnlCostumer.class.getName()).log(Level.SEVERE, null, ex);
    }
             }
    // Mengosongkan Text Field
    private void reset(){
        try{
            txtID.setText("");
            txtNama.setText("");
            txtJenis.setSelectedItem("Gender");
            txtTelp.setText("");
            txtEmail.setText("");
            txtTempat.setText("");
            txtDate.setDate(null);
            txtAlamat.setText("");
            
            id_auto();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
// Menampilkan Tabel
 private void tampilkan(){
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("ID");
        dtm.addColumn("Name");
        dtm.addColumn("Gender");
        dtm.addColumn("Telp");
        dtm.addColumn("Email");
        dtm.addColumn("Place of Birth");
        dtm.addColumn("Day Of Birth");
        dtm.addColumn("Address");
        
        
        try{
            koneksi();
           ResultSet res =  stat.executeQuery("select * from costumer");
           while(res.next()){
            dtm.addRow(new Object[]{
                res.getString(1),
                res.getString(2),
                res.getString(3),
                res.getString(4),
                res.getString(5),
                res.getString(6),
                res.getString(7),
                res.getString(8)
                
            });
           }
          tblCostumer.setModel(dtm);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
 }
 
   // Menghapus Data
   private void hapus(){
        koneksi();
        try{
            stat.executeUpdate("DELETE FROM costumer WHERE id ='"+txtID.getText()+"'");
            stat.close();
            reset();
            JOptionPane.showMessageDialog(null, "Deleted Success");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
    

// Auto Increment ID
    private void id_auto(){
        koneksi();
               try{
            stat = con.createStatement();
            String sql = "select max(right(id,4)) as no from costumer";
            ResultSet rs = stat.executeQuery(sql);
            while(rs.next()){
            if(rs.first()== false){
                txtID.setText("COS-0001");
            }else{
                rs.last();
                int set_id = rs.getInt(1)+1;
                String no = String.valueOf(set_id);
                int id_next = no.length();
                for(int a = 0; a<5 - id_next; a++){
                    no = "0" + no;
                }
            txtID.setText("COS-"+no);
            }
            rs.close();
            stat.close();
        }
        
    }catch(Exception e){
        
    }
}
}

