/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panel;

import com.placeholder.PlaceHolder;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import swing.koneksi;
/**
 *
 * @author Aditya Pratama
 */
public class pnlDatabase extends javax.swing.JPanel {
PlaceHolder holder;
Statement stat;
PreparedStatement ps;
Connection con;
    /**
     * Creates new form pnlPayment
     */
    public pnlDatabase() {
        initComponents();
        holder = new PlaceHolder(txtNameDB, "Enter Your Database Name!");        
        holder = new PlaceHolder(txtTableDB, "Enter Your Table Name!");        
        holder = new PlaceHolder(txtTableDB1, "Enter Your Table Name!");        
        holder = new PlaceHolder(txtDropDB, "Enter Your Database Name!");              
        holder = new PlaceHolder(txtFieldDB, "Enter Your Name of Field!");        
        holder = new PlaceHolder(txtFieldDB1, "Enter Your Name of Field!");        
        holder = new PlaceHolder(txtTypeDB, "Enter Your Type of Field!");        
        holder = new PlaceHolder(txtTypeDB1, "Enter Your Type of Field!");        
        holder = new PlaceHolder(txtLengthDB, "Enter Your Length of Field!");        
        holder = new PlaceHolder(txtLengthDB1, "Enter Your Length of Field!");        
        holder = new PlaceHolder(txtAttributeDB, "Not Null");             
        holder = new PlaceHolder(txtAttributeDB1, "Not Null");             
        holder = new PlaceHolder(txtIndexDB, "Enter Your Index of Field!");        
        holder = new PlaceHolder(txtUseDB, "Enter Your Database Name!");        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        txtConnect = new javax.swing.JLabel();
        txtDrop = new javax.swing.JLabel();
        txtCreateDB = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txtNameDB = new javax.swing.JTextField();
        txtTableDB = new javax.swing.JTextField();
        txtDropDB = new javax.swing.JTextField();
        txtFieldDB = new javax.swing.JTextField();
        txtTypeDB = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        txtLengthDB = new javax.swing.JTextField();
        txtAttributeDB = new javax.swing.JTextField();
        txtIndexDB = new javax.swing.JTextField();
        txtTable = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        txtUseDB = new javax.swing.JTextField();
        txtUse = new javax.swing.JLabel();
        txtFieldDB1 = new javax.swing.JTextField();
        txtTypeDB1 = new javax.swing.JTextField();
        txtLengthDB1 = new javax.swing.JTextField();
        txtAttributeDB1 = new javax.swing.JTextField();
        txtADD = new javax.swing.JLabel();
        txtTableDB1 = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        txtPath1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtBrowse1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        txtSave = new javax.swing.JLabel();

        jLabel3.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel3.setText("Connect Your Database");

        txtConnect.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtConnect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/cloud-computing.png"))); // NOI18N
        txtConnect.setText("Connect Database");
        txtConnect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtConnect.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtConnectMousePressed(evt);
            }
        });

        txtDrop.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtDrop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/database (1).png"))); // NOI18N
        txtDrop.setText("Drop Database");

        txtCreateDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtCreateDB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/database.png"))); // NOI18N
        txtCreateDB.setText("Create Database");
        txtCreateDB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtCreateDB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtCreateDBMousePressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel4.setText("Data Definition Language");

        txtNameDB.setBackground(java.awt.SystemColor.controlHighlight);
        txtNameDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtNameDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameDBActionPerformed(evt);
            }
        });

        txtTableDB.setBackground(java.awt.SystemColor.controlHighlight);
        txtTableDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtTableDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTableDBActionPerformed(evt);
            }
        });

        txtDropDB.setBackground(java.awt.SystemColor.controlHighlight);
        txtDropDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtDropDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDropDBActionPerformed(evt);
            }
        });

        txtFieldDB.setBackground(java.awt.SystemColor.controlHighlight);
        txtFieldDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtFieldDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldDBActionPerformed(evt);
            }
        });

        txtTypeDB.setBackground(java.awt.SystemColor.controlHighlight);
        txtTypeDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtTypeDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypeDBActionPerformed(evt);
            }
        });

        txtLengthDB.setBackground(java.awt.SystemColor.controlHighlight);
        txtLengthDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtLengthDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLengthDBActionPerformed(evt);
            }
        });

        txtAttributeDB.setBackground(java.awt.SystemColor.controlHighlight);
        txtAttributeDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtAttributeDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAttributeDBActionPerformed(evt);
            }
        });

        txtIndexDB.setBackground(java.awt.SystemColor.controlHighlight);
        txtIndexDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtIndexDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIndexDBActionPerformed(evt);
            }
        });

        txtTable.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtTable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/grid.png"))); // NOI18N
        txtTable.setText("Create Table");
        txtTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtTableMousePressed(evt);
            }
        });

        txtUseDB.setBackground(java.awt.SystemColor.controlHighlight);
        txtUseDB.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtUseDB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUseDBActionPerformed(evt);
            }
        });

        txtUse.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtUse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/database (2).png"))); // NOI18N
        txtUse.setText("Use Database");
        txtUse.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtUse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtUseMousePressed(evt);
            }
        });

        txtFieldDB1.setBackground(java.awt.SystemColor.controlHighlight);
        txtFieldDB1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtFieldDB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFieldDB1ActionPerformed(evt);
            }
        });

        txtTypeDB1.setBackground(java.awt.SystemColor.controlHighlight);
        txtTypeDB1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtTypeDB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTypeDB1ActionPerformed(evt);
            }
        });

        txtLengthDB1.setBackground(java.awt.SystemColor.controlHighlight);
        txtLengthDB1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtLengthDB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLengthDB1ActionPerformed(evt);
            }
        });

        txtAttributeDB1.setBackground(java.awt.SystemColor.controlHighlight);
        txtAttributeDB1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtAttributeDB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAttributeDB1ActionPerformed(evt);
            }
        });

        txtADD.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtADD.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/grid.png"))); // NOI18N
        txtADD.setText("Add Column");
        txtADD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtADDMousePressed(evt);
            }
        });

        txtTableDB1.setBackground(java.awt.SystemColor.controlHighlight);
        txtTableDB1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtTableDB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTableDB1ActionPerformed(evt);
            }
        });

        txtPath1.setBackground(java.awt.SystemColor.controlHighlight);
        txtPath1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 11)); // NOI18N
        txtPath1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPath1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 14)); // NOI18N
        jLabel5.setText("Upload File CSV");

        txtBrowse1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/photo-camera.png"))); // NOI18N
        txtBrowse1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtBrowse1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtBrowse1MousePressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel6.setText("Import CSV File");

        txtSave.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/save.png"))); // NOI18N
        txtSave.setText("Save");
        txtSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtSaveMousePressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3)
                    .addComponent(jSeparator4)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(295, 295, 295)
                                .addComponent(txtTable))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtTableDB1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtFieldDB1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtLengthDB1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(47, 47, 47)
                                        .addComponent(txtAttributeDB1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTypeDB1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(147, 147, 147))
                    .addComponent(jSeparator5)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtTableDB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                                        .addComponent(txtFieldDB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(txtLengthDB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtAttributeDB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtTypeDB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtIndexDB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(156, 156, 156))
                            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtConnect)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtUseDB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(68, 68, 68)
                                        .addComponent(txtUse))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtNameDB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDropDB, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(71, 71, 71)
                                                .addComponent(txtDrop))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(68, 68, 68)
                                                .addComponent(txtCreateDB))))
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(290, 290, 290)
                                .addComponent(txtADD))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtBrowse1)
                                .addGap(27, 27, 27)
                                .addComponent(txtPath1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(txtSave)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtConnect)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtCreateDB, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtNameDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtUse, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUseDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTableDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFieldDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTypeDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLengthDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAttributeDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIndexDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(txtTable)
                .addGap(51, 51, 51)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFieldDB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTypeDB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTableDB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLengthDB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAttributeDB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(txtADD)
                .addGap(26, 26, 26)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDropDB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDrop))
                .addGap(24, 24, 24)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(txtBrowse1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPath1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSave)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtConnectMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtConnectMousePressed
     con = new koneksi().ConnectDB();
    
    }//GEN-LAST:event_txtConnectMousePressed

    private void txtCreateDBMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCreateDBMousePressed
    String name = txtNameDB.getText().toString();
    
        try {
        // TODO add your handling code here:
        String sql = "CREATE DATABASE "+ name;
         stat = con.createStatement();
         stat.executeUpdate(sql);
         stat.close();
        JOptionPane.showMessageDialog(null, "Create Database Success!");
    } catch (SQLException ex) {
        Logger.getLogger(pnlDatabase.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_txtCreateDBMousePressed

    private void txtNameDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameDBActionPerformed

    private void txtTableDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTableDBActionPerformed
        // TODO add your handling code here:   
    }//GEN-LAST:event_txtTableDBActionPerformed

    private void txtDropDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDropDBActionPerformed
        // TODO add your handling code here:
        String drop = txtDropDB.getText().toString();
    
        try {
        // TODO add your handling code here:
        String sql = "CREATE DATABASE "+ drop;
         stat = con.createStatement();
         stat.executeUpdate(sql);
         stat.close();
        JOptionPane.showMessageDialog(null, "Drop Database Success!");
    } catch (SQLException ex) {
        Logger.getLogger(pnlDatabase.class.getName()).log(Level.SEVERE, null, ex);
    }
    
    }//GEN-LAST:event_txtDropDBActionPerformed

    private void txtFieldDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldDBActionPerformed

    private void txtTypeDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypeDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTypeDBActionPerformed

    private void txtLengthDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLengthDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLengthDBActionPerformed

    private void txtAttributeDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAttributeDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAttributeDBActionPerformed

    private void txtIndexDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIndexDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIndexDBActionPerformed

    private void txtTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtTableMousePressed
        // TODO add your handling code here:
           String table = txtTableDB.getText().toString();
        String field = txtFieldDB.getText().toString();
        String type = txtTypeDB.getText().toString();
        String length = txtLengthDB.getText().toString();
        String attribute = txtAttributeDB.getText().toString();
        String index = txtIndexDB.getText().toString();
        
    
        try {
        // TODO add your handling code here:
        String sql = "CREATE TABLE IF NOT EXISTS"+" "+ table +"("+ field +" "+ type +"("+ length +")" +" "+ attribute +" "+ index+")";
         stat = con.createStatement();
         stat.executeUpdate(sql);
         stat.close();
        JOptionPane.showMessageDialog(null, "Create Table Success!");
    } catch (SQLException ex) {
        Logger.getLogger(pnlDatabase.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_txtTableMousePressed

    private void txtUseDBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUseDBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUseDBActionPerformed

    private void txtUseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUseMousePressed
        // TODO add your handling code here:
           String name = txtUseDB.getText().toString();
    
        try {
        // TODO add your handling code here:
        String sql = "USE "+ name;
         stat = con.createStatement();
         stat.executeUpdate(sql);
         stat.close();
        JOptionPane.showMessageDialog(null, "Use Database Success!");
    } catch (SQLException ex) {
        Logger.getLogger(pnlDatabase.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_txtUseMousePressed

    private void txtFieldDB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFieldDB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFieldDB1ActionPerformed

    private void txtTypeDB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTypeDB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTypeDB1ActionPerformed

    private void txtLengthDB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLengthDB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLengthDB1ActionPerformed

    private void txtAttributeDB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAttributeDB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAttributeDB1ActionPerformed

    private void txtADDMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtADDMousePressed
        // TODO add your handling code here:
         String table = txtTableDB1.getText().toString();
        String field = txtFieldDB1.getText().toString();
        String type = txtTypeDB1.getText().toString();
        String length = txtLengthDB1.getText().toString();
        String attribute = txtAttributeDB1.getText().toString();
        
    
        try {
        // TODO add your handling code here:
        String sql = "ALTER TABLE "+" "+ table +" "+"ADD"+" "+ field +" "+ type +"("+ length +")" +" "+ attribute;
         stat = con.createStatement();
         stat.executeUpdate(sql);
         stat.close();
        JOptionPane.showMessageDialog(null, "Add Column Success!");
    } catch (SQLException ex) {
        Logger.getLogger(pnlDatabase.class.getName()).log(Level.SEVERE, null, ex);
    }
    }//GEN-LAST:event_txtADDMousePressed

    private void txtTableDB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTableDB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTableDB1ActionPerformed

    private void txtPath1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPath1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPath1ActionPerformed

    private void txtBrowse1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtBrowse1MousePressed
        // TODO add your handling code here:
        
  browseCSV();

    }//GEN-LAST:event_txtBrowse1MousePressed

    private void txtSaveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSaveMousePressed
        // TODO add your handling code here:
        loadData();
    
    }//GEN-LAST:event_txtSaveMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JLabel txtADD;
    private javax.swing.JTextField txtAttributeDB;
    private javax.swing.JTextField txtAttributeDB1;
    public javax.swing.JLabel txtBrowse1;
    private javax.swing.JLabel txtConnect;
    private javax.swing.JLabel txtCreateDB;
    private javax.swing.JLabel txtDrop;
    private javax.swing.JTextField txtDropDB;
    private javax.swing.JTextField txtFieldDB;
    private javax.swing.JTextField txtFieldDB1;
    private javax.swing.JTextField txtIndexDB;
    private javax.swing.JTextField txtLengthDB;
    private javax.swing.JTextField txtLengthDB1;
    private javax.swing.JTextField txtNameDB;
    public javax.swing.JTextField txtPath1;
    private javax.swing.JLabel txtSave;
    private javax.swing.JLabel txtTable;
    private javax.swing.JTextField txtTableDB;
    private javax.swing.JTextField txtTableDB1;
    private javax.swing.JTextField txtTypeDB;
    private javax.swing.JTextField txtTypeDB1;
    private javax.swing.JLabel txtUse;
    private javax.swing.JTextField txtUseDB;
    // End of variables declaration//GEN-END:variables
private void koneksi(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/goplane?","root","");
            stat = con.createStatement();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }

private String validatePath(String invalidPath){
 String validPath;
 validPath = invalidPath.replace('\\', '/');
 return validPath;
 }

 private void browseCSV(){
   JFileChooser jfc = new JFileChooser();
   FileFilter f = new FileFilter() {
     @Override
     public boolean accept(File f) {
       if(f.getName().toLowerCase().endsWith(".csv") || f.isDirectory() ){
          return true;
      }else{
         return false;
     }
   }
     
    
 public String getDescription() {
   return "*.csv";
  }
 };
 
 jfc.addChoosableFileFilter(f);
 jfc.setMultiSelectionEnabled(false);
 jfc.showOpenDialog(this);
 //mengambil path file
 String path = jfc.getSelectedFile().getAbsolutePath();
 txtPath1.setText(path);
 }
 
 private void loadData(){
 koneksi();
   Statement statement = null;
   String path = validatePath(txtPath1.getText().toString());
   final String delimiter = ";";
   final String query = "LOAD DATA INFILE '"+path+ "' INTO TABLE csv FIELDS TERMINATED BY '"+delimiter+"'"
   + "LINES TERMINATED BY '\n' (id, nama);";
   try {
     statement = con.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
     statement.executeUpdate(query);
     JOptionPane.showMessageDialog(null, "Sukses");
   } catch (SQLException ex) {
     System.out.println(ex.getMessage());
  }
 }
 
 
}
