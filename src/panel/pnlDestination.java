/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panel;

import com.placeholder.PlaceHolder;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import method.Date;
import static panel.pnlCostumer.tblCostumer;
import static panel.pnlCostumer.txtID;
import static panel.pnlCostumer.txtJenis;

/**
 *
 * @author Aditya Pratama
 */
public class pnlDestination extends javax.swing.JPanel {
PlaceHolder holder;
    /**
     * Creates new form pnlDestination
     */
    public pnlDestination() {
        initComponents();
      tampilkan();
       id_auto();
        cb_id();
             holder = new PlaceHolder(txtFrom, "Flying From");
         holder = new PlaceHolder(txtTo, "Flying Tos");
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtFrom = new javax.swing.JTextField();
        txtJenis = new javax.swing.JComboBox<>();
        txtTo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        txtAdult = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtChildren = new javax.swing.JComboBox<>();
        txtInfant = new javax.swing.JComboBox<>();
        txtDelete = new javax.swing.JLabel();
        txtEdit = new javax.swing.JLabel();
        txtSave = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDestination = new javax.swing.JTable();
        txtOut = new com.toedter.calendar.JDateChooser();
        txtNama = new javax.swing.JTextField();
        cbID = new javax.swing.JComboBox<>();
        txtDelete1 = new javax.swing.JLabel();
        txtIDs = new javax.swing.JTextField();
        txtOut1 = new com.toedter.calendar.JDateChooser();

        txtFrom.setBackground(java.awt.SystemColor.controlHighlight);
        txtFrom.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFromActionPerformed(evt);
            }
        });

        txtJenis.setBackground(new java.awt.Color(204, 204, 204));
        txtJenis.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtJenis.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight type", "Round Trip", "One Way" }));
        txtJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJenisActionPerformed(evt);
            }
        });

        txtTo.setBackground(java.awt.SystemColor.controlHighlight);
        txtTo.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtToActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel2.setText("When do you");

        jLabel3.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel3.setText("Find Your Flights");

        jLabel4.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel4.setText("want to go?");

        jLabel5.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel5.setText("Outbound");

        jLabel6.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel6.setText("Return");

        txtAdult.setBackground(new java.awt.Color(204, 204, 204));
        txtAdult.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtAdult.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adult 12+", "1", "2", "3", "4", "5", "6", "7" }));
        txtAdult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAdultActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 18)); // NOI18N
        jLabel8.setText("Who is going?");

        txtChildren.setBackground(new java.awt.Color(204, 204, 204));
        txtChildren.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtChildren.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Children 2-11", "1", "2", "3", "4", "5", "6", "7" }));
        txtChildren.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChildrenActionPerformed(evt);
            }
        });

        txtInfant.setBackground(new java.awt.Color(204, 204, 204));
        txtInfant.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtInfant.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Infant On Seat", "1", "2", "3", "4", "5", "6", "7" }));
        txtInfant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInfantActionPerformed(evt);
            }
        });

        txtDelete.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/file.png"))); // NOI18N
        txtDelete.setText("Delete");
        txtDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDeleteMouseClicked(evt);
            }
        });

        txtEdit.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/edit (1).png"))); // NOI18N
        txtEdit.setText("Edit");
        txtEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEditMouseClicked(evt);
            }
        });

        txtSave.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/online-booking.png"))); // NOI18N
        txtSave.setText("Book");
        txtSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSaveMouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 11)); // NOI18N
        jLabel9.setText("*Maximum Total Passenger : 7");

        tblDestination.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblDestination.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDestinationMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblDestinationMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblDestination);

        txtOut.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtOutPropertyChange(evt);
            }
        });

        txtNama.setBackground(java.awt.SystemColor.controlHighlight);
        txtNama.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaActionPerformed(evt);
            }
        });

        cbID.setBackground(new java.awt.Color(204, 204, 204));
        cbID.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        cbID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select" }));
        cbID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbIDActionPerformed(evt);
            }
        });

        txtDelete1.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 1, 12)); // NOI18N
        txtDelete1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/swing/images/refresh.png"))); // NOI18N
        txtDelete1.setText("Refresh");
        txtDelete1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        txtDelete1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtDelete1MousePressed(evt);
            }
        });

        txtIDs.setEditable(false);
        txtIDs.setBackground(java.awt.SystemColor.controlHighlight);
        txtIDs.setFont(new java.awt.Font("MingLiU_HKSCS-ExtB", 0, 12)); // NOI18N
        txtIDs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 771, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5)
                                    .addComponent(txtOut, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                                    .addComponent(jLabel6)
                                    .addComponent(txtOut1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtFrom, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(cbID, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtIDs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(66, 66, 66)
                                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(txtJenis, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 136, Short.MAX_VALUE)))
                .addGap(5, 5, 5))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtSave)
                                                .addGap(32, 32, 32)
                                                .addComponent(txtEdit)
                                                .addGap(38, 38, 38)
                                                .addComponent(txtDelete))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(51, 51, 51)
                                                .addComponent(txtAdult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(45, 45, 45)
                                                .addComponent(txtChildren, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtInfant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDelete1))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtJenis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addGap(11, 11, 11)
                .addComponent(txtOut1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtInfant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtChildren, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAdult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSave)
                    .addComponent(txtEdit)
                    .addComponent(txtDelete)
                    .addComponent(txtDelete1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFromActionPerformed

    }//GEN-LAST:event_txtFromActionPerformed

    private void txtJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJenisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtJenisActionPerformed

    private void txtToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtToActionPerformed

    private void txtAdultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAdultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAdultActionPerformed

    private void txtChildrenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChildrenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChildrenActionPerformed

    private void txtInfantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInfantActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInfantActionPerformed

    private void txtNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaActionPerformed

    private void cbIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbIDActionPerformed
        // TODO add your handling code here:
        tampil_combo();
    }//GEN-LAST:event_cbIDActionPerformed

    private void txtOutPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtOutPropertyChange
        // TODO add your handling code here:
        try{
        if (txtOut.getDate()!= null){
            SimpleDateFormat ft = new SimpleDateFormat("dd-MM-yyyy");
        String des = String.valueOf(ft.format(txtOut.getDate()));
        }
        }catch(Exception e){}
    }//GEN-LAST:event_txtOutPropertyChange

    private void tblDestinationMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDestinationMouseClicked
        // TODO add your handling code here:
      
        if(evt.getClickCount()==1){
            txtOut.setDate(Date.tanggal(tblDestination, 6));
            txtOut1.setDate(Date.tanggal(tblDestination, 7));
        }
    }//GEN-LAST:event_tblDestinationMouseClicked

    private void tblDestinationMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDestinationMousePressed
        // TODO add your handling code here:    
        try{
            int row = tblDestination.getSelectedRow();
            
            txtIDs.setText(tblDestination.getValueAt(row, 0).toString());
            cbID.setSelectedItem(tblDestination.getValueAt(row, 1).toString());
            txtNama.setText(tblDestination.getValueAt(row, 2).toString());
            txtFrom.setText(tblDestination.getValueAt(row, 3).toString());
            txtTo.setText(tblDestination.getValueAt(row, 4).toString());
             txtJenis.setSelectedItem(tblDestination.getValueAt(row, 5).toString());
             
             
              txtAdult.setSelectedItem(tblDestination.getValueAt(row, 8).toString());
               txtChildren.setSelectedItem(tblDestination.getValueAt(row, 9).toString());
                txtInfant.setSelectedItem(tblDestination.getValueAt(row, 10).toString());
           
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_tblDestinationMousePressed

    private void txtSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSaveMouseClicked
        // TODO add your handling code here:
        simpan();
        tampilkan();
      
    }//GEN-LAST:event_txtSaveMouseClicked

    private void txtEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEditMouseClicked
        // TODO add your handling code here:
        edit();
//    koneksi();  
//         try{
//        
//                     
//            String sql = "update destination set id=?, id_cs=?, nama=?, from=?, to=?, jenis=?, outbound=?, adult=?, child=?, infant=? where id = '"+txtIDs.getText()+"'";
//           PreparedStatement st = con.prepareStatement(sql);{
//         try{ 
//
//              SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
//                                String date = sdf.format(txtOut.getDate());
//                                String date2 = sdf.format(txtOut1.getDate());
//                                
//             st.setString(1, txtIDs.getText());
//             st.setString(2, cbID.getSelectedItem().toString());
//             st.setString(3, txtNama.getText());
//             st.setString(4, txtFrom.getText());
//             st.setString(5, txtTo.getText());
//             st.setString(6, txtJenis.getSelectedItem().toString());
//             st.setString(7, date);
//             //st.setString(8, date2);
//             st.setString(8, txtAdult.getSelectedItem().toString());
//             st.setString(9, txtChildren.getSelectedItem().toString());
//             st.setString(10, txtInfant.getSelectedItem().toString());
//             int result = st.executeUpdate();
//             result = st.executeUpdate();
//             con.close();
//             tampilkan();
//             JOptionPane.showMessageDialog(null, "Updated Success!");
//         }catch(SQLException ex){
//             Logger.getLogger(pnlDestination.class.getName()).log(Level.SEVERE, null, ex);
//         }   
//        }
//        } catch (SQLException ex) {
//        Logger.getLogger(pnlDestination.class.getName()).log(Level.SEVERE, null, ex);
//    }
//   
    }//GEN-LAST:event_txtEditMouseClicked

    private void txtDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDeleteMouseClicked
        // TODO add your handling code here:
        hapus();
        tampilkan();
    }//GEN-LAST:event_txtDeleteMouseClicked

    private void txtDelete1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtDelete1MousePressed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_txtDelete1MousePressed

    private void txtIDsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbID;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable tblDestination;
    private javax.swing.JComboBox<String> txtAdult;
    private javax.swing.JComboBox<String> txtChildren;
    private javax.swing.JLabel txtDelete;
    private javax.swing.JLabel txtDelete1;
    private javax.swing.JLabel txtEdit;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtIDs;
    private javax.swing.JComboBox<String> txtInfant;
    private javax.swing.JComboBox<String> txtJenis;
    private javax.swing.JTextField txtNama;
    private com.toedter.calendar.JDateChooser txtOut;
    private com.toedter.calendar.JDateChooser txtOut1;
    private javax.swing.JLabel txtSave;
    private javax.swing.JTextField txtTo;
    // End of variables declaration//GEN-END:variables

    Statement stat;
     Connection con;
     PreparedStatement ps;
     
     
     
      private void koneksi(){
        try{
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/goplane?","root","");
            stat = con.createStatement();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
     
     // Menyimpan Data
    private void simpan (){
       
      koneksi();
                try{
                    
                 
                      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                                String date = sdf.format(txtOut.getDate());
                                String date1 = sdf.format(txtOut1.getDate());
                                
                   
//                  ps = con.prepareStatement("insert into destination values(? ,? ,? ,?, ?, ?, ? ,?)");
//                  ps.setString(1, txtID.getText());
//                  ps.setString(2, cbID.getSelectedItem().toString());
//                  ps.setString(3, txtNama.getText());
//                  ps.setString(4, txtFrom.getText());
//                  ps.setString(5, txtTo.getText());
//                  ps.setString(5, txtJenis.getText());
//                  ps.setString(6, date);
//                  ps.setString(7, date1); 
//                  ps.setString(8, txtAdult.getSelectedItem().toString());
//                  ps.setString(9, txtAdult.getSelectedItem().toString());
//                  ps.setString(10, txtAdult.getSelectedItem().toString());
//                  
//                  ps.setString(8, txtAlamat.getText());
//                  ps.execute();
//                   
                  
            stat.executeUpdate("insert into destination values("
                    + "'" + txtIDs.getText()+ "',"
                    + "'" + cbID.getSelectedItem().toString()+ "',"
                    + "'" + txtNama.getText() + "',"
                    + "'" + txtFrom.getText() + "',"
                    + "'" + txtTo.getText() + "',"
                    + "'" + txtJenis.getSelectedItem() + "',"
                    + "'" + date+ "',"
                    + "'" + date1+ "',"
                    + "'" + txtAdult.getSelectedItem()+ "',"
                    + "'" + txtChildren.getSelectedItem() + "',"
                    +  "'" +txtInfant.getSelectedItem() +"')");
         stat.close();
                    reset();
         id_auto();
         txtFrom.requestFocus();
         JOptionPane.showMessageDialog(null, "Saved Success");
         
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Booking Failed!");
        }
       
    }
    
 private void edit(){
     try{ 
         koneksi();
     SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                                String date = sdf.format(txtOut.getDate());
                                String date1 = sdf.format(txtOut1.getDate());
     String sql = "update destination SET id='"+txtIDs.getText()+"',id_cs='"+cbID.getSelectedItem()+"',nama='"+txtNama.getText()+"',dari='"+txtFrom.getText()+"',ke='"+txtTo.getText()+"',jenis='"+txtJenis.getSelectedItem()+"',outbound='"+date+"',kembali='"+date1+"',adult='"+txtAdult.getSelectedItem()+"',child='"+txtChildren.getSelectedItem()+"',infant='"+txtInfant.getSelectedItem()+"' where id='"+txtIDs.getText()+"'";
          
            java.sql.PreparedStatement pst = con.prepareStatement(sql);
            pst.executeUpdate();
            tampilkan();
            JOptionPane.showMessageDialog(null, "berhasil disimpan");
        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(null, e);
        }
 }
    
 
    
     
    // Mengosongkan Text Field
    private void reset(){
        try{
            
            txtIDs.setText("");
            txtNama.setText("");
            txtFrom.setText("");
            txtTo.setText("");
            txtJenis.setSelectedIndex(0);
            txtOut.setDate(null);
            txtOut1.setDate(null);
            txtAdult.setSelectedItem("Adult 12+");
            txtChildren.setSelectedItem("Children 2-11");
            txtInfant.setSelectedItem("Infant On Seat");
            
            id_auto();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
// Menampilkan Tabel
 private void tampilkan(){
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("ID");
        dtm.addColumn("ID-CS");
        dtm.addColumn("Name");
        dtm.addColumn("From");
        dtm.addColumn("To");
        dtm.addColumn("Flight Type");
        dtm.addColumn("Outbound");
        dtm.addColumn("Return");
        dtm.addColumn("Adult");
        dtm.addColumn("Children");
        dtm.addColumn("Infant On Seat");
        
        
        try{
            koneksi();
           ResultSet res =  stat.executeQuery("select * from destination");
           while(res.next()){
            dtm.addRow(new Object[]{
                res.getString(1),
                res.getString(2),
                res.getString(3),
                res.getString(4),
                res.getString(5),
                res.getString(6),
                res.getString(7),
                res.getString(8),
                res.getString(9),
                res.getString(10),
                res.getString(11)
                
            });
           }
          tblDestination.setModel(dtm);
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
 }
 
   // Menghapus Data
   private void hapus(){
        koneksi();
        try{
            stat.executeUpdate("DELETE FROM destination WHERE id ='"+txtIDs.getText()+"'");
            stat.close();
            reset();
            JOptionPane.showMessageDialog(null, "Deleted Success!");
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }

private void cb_id(){
    koneksi();
    try{
          
           ResultSet res =  stat.executeQuery("select id from costumer order by id asc");
           while(res.next()){
            Object[] ob = new Object[1];
            ob[0] = res.getString(1);
            
            cbID.addItem((String) ob[0]);
          
                
                
            }
    stat.close();
    }
           
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
        
    }   
// Menampilkan nama dari id cb
public void tampil_combo()
    {
        try {
        koneksi();
        Statement stt = con.createStatement();
        String sql = "SELECT nama FROM costumer WHERE id ='" + cbID.getSelectedItem()+"'";      
        ResultSet res = stt.executeQuery(sql);                          
        
        while(res.next()){
            Object[] ob = new Object[3];
            ob[0] = res.getString(1);
            
            txtNama.setText((String) ob[0]);                               
        }
        res.close(); stt.close();
         
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }
 
    // Auto Increment ID
    private void id_auto(){
        koneksi();
               try{
            stat = con.createStatement();
            String sql = "select max(right(id,4)) as no from destination";
            ResultSet rs = stat.executeQuery(sql);
            while(rs.next()){
            if(rs.first()== false){
                txtIDs.setText("DES-0001");
            }else{
                rs.last();
                int set_id = rs.getInt(1)+1;
                String no = String.valueOf(set_id);
                int id_next = no.length();
                for(int a = 0; a<5 - id_next; a++){
                    no = "0" + no;
                }
            txtIDs.setText("DES-"+no);
            }
            rs.close();
            stat.close();
        }
        
    }catch(Exception e){
        
    }
}
    
}
